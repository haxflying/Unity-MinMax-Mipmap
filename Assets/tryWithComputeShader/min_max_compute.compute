// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

RWStructuredBuffer<float2> minmaxTree;
Texture2D<float> shadowTex;
SamplerState samplershadowTex
{
    Filter = MIN_MAG_MIP_POINT;
    AddressU = Wrap;
    AddressV = Wrap;
};
int bufferLength;
int deep;
int GetSum(int index)
{
	//等比数列求和
    int sum = pow(2, deep - index + 1) - 1;
    //数组Index从0开始，所以-1
    return (bufferLength - sum - 1) * 1024;
}

[numthreads(1024,1,1)]
void CSMain
(uint3 gId : SV_GroupID, uint3 tId : SV_GroupThreadID)
{
//just a test now
    int u = gId.x;
    int v = tId.x;
    int index = u * 1024 + v;
    float2 uv = float2((float) u, (float) v) / 1024.0;
    float sdepth = shadowTex.SampleLevel(samplershadowTex, uv, 0);

    uint num, stride;
    minmaxTree.GetDimensions(num, stride);

    if (index < num)
    {
        minmaxTree[index] = float2(sdepth, sdepth);                                   
    }
}

